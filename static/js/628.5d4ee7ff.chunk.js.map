{"version":3,"file":"static/js/628.5d4ee7ff.chunk.js","mappings":"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","sources":["redux/apiCall.js","Pages/LoginPage.js","utils/validation.js"],"sourcesContent":["import { publicRequest } from \"../utils/requestMethod\";\r\nimport { loginStart, loginSuccess, loginFailure } from \"./userRedux\";\r\n\r\nexport const login = async (dispatch, user) => {\r\n  loginStart();\r\n  try {\r\n    const res = await publicRequest.post(\"/user/login\", user);\r\n\r\n    if (!res.data.isBasic) {\r\n      console.log(\"isBAsic\", res.data.isBasic);\r\n    }\r\n\r\n    localStorage.setItem(\"is_logged_in\", res.data.token);\r\n    dispatch(loginSuccess(res.data));\r\n\r\n    console.log(\r\n      \"after storing to backend \",\r\n      localStorage.getItem(\"is_logged_in\")\r\n    );\r\n\r\n    return res.data;\r\n  } catch (error) {\r\n    dispatch(loginFailure());\r\n    return error.response.data;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./styles/owl.carousel.min.css\";\nimport \"./styles/style.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { userLoggedInAction } from \"../redux/actions/userActions\";\nimport { ErrorPara } from \"../components/OnboardingFormComponent/BusinessComponent\";\nimport { useSnackbar } from \"notistack\";\nimport { IsEmptyLogin, signupValidation } from \"../utils/validation\";\nimport { login } from \"../redux/apiCall\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport loginImg from \"../assests/login-removebg-preview.png\";\nimport { PiWarning } from \"react-icons/pi\";\nimport { MagnifyingGlass } from \"react-loader-spinner\";\n\nfunction LoginPage({ merchantLogo, networkError }) {\n  let formObj = { password: \"\", email: \"\" };\n  const [formValues, setFormValues] = useState(formObj);\n  const [error, setError] = useState(\"\");\n  const [Error, setErrors] = useState(formObj);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let temp = IsEmptyLogin(formValues);\n    setErrors(temp);\n    if (temp === null) {\n      let data = await login(dispatch, formValues);\n      // console.log(data);\n      if (data?.result) {\n        if (!data.isBasic) {\n          navigate(\"/merchants/onboarding\");\n        }\n      } else {\n        setError(data.message);\n        enqueueSnackbar(data.message);\n      }\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (value.length < 1) {\n      setErrors(null);\n    }\n    setFormValues({ ...formValues, [name]: value });\n  };\n  console.log(networkError);\n\n  return (\n    <>\n      {networkError ? (\n        <div className=\"flex items-center justify-center flex-col gap-2 bg-black/90 h-screen w-[100vw]\">\n          <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"magnifying-glass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"magnifying-glass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n          />\n          <h2 className=\"text-white font-semibolld\">\n            Check your internet connection{\" \"}\n          </h2>\n        </div>\n      ) : (\n        <div className=\" pr-0 lg:pr-0\">\n          <div className=\"flex justify-between\">\n            <div className=\"flex justify-center items-center min-w-[50%]\">\n              {showSnackbar && (\n                <div\n                  style={{\n                    position: \"fixed\",\n                    bottom: \"16px\",\n                    left: \"16px\",\n                    right: \"16px\",\n                    backgroundColor: \"#333\",\n                    color: \"#fff\",\n                    padding: \"12px 16px\",\n                    borderRadius: \"4px\",\n                    zIndex: 1,\n                  }}\n                >\n                  {error}\n                </div>\n              )}\n              <form\n                action=\"#\"\n                method=\"post\"\n                className=\"lg:max-w-[400px] sm:max-w-[300px] max-w-[80%]\"\n              >\n                <div className=\"md:mt-2 mt-4\">\n                  <img src={merchantLogo} className=\"w-32 mx-auto py-3\" />\n                  <div className=\"text-center\">\n                    {error && (\n                      <ErrorPara>\n                        {error}\n                        <PiWarning className=\"inline ml-[2px] my-0 px-0\" />\n                      </ErrorPara>\n                    )}\n                  </div>\n                  {/* <h3 className=\"text-center\">Log In</h3> */}\n                  <div className=\" text-center font-medium text-slate-800 text-3xl my-4 mb-8 mt-2\">\n                    Login to your Account\n                  </div>\n                </div>\n                <div className=\"form-group first my-4 flex flex-col gap-5\">\n                  <div>\n                    <input\n                      type=\"email\"\n                      value={formValues.email}\n                      onChange={handleChange}\n                      className=\" w-full px-2 py-2  ring-1 ring-[#a07bf8] max-w-[400px] rounded-md focus:outline-none \"\n                      placeholder=\"email\"\n                      name=\"email\"\n                      required\n                    />\n                    {Error?.email && (\n                      <ErrorPara className=\"font-normal pl-1\">\n                        {Error.email}\n                      </ErrorPara>\n                    )}\n                  </div>\n                  <div>\n                    <input\n                      type=\"password\"\n                      value={formValues.password}\n                      onChange={handleChange}\n                      className=\"w-full px-2 py-2 ring-1 ring-[#a07bf8] max-w-[400px] rounded-md focus:outline-none \"\n                      placeholder=\"password\"\n                      name=\"password\"\n                      required\n                    />\n                    {Error?.password && (\n                      <ErrorPara className=\"font-normal pl-1\">\n                        {Error.password}\n                      </ErrorPara>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between  flex-col sm:flex-row sm:items-center \">\n                  <div className=\"text-xs font-medium text-black\">\n                    Trouble logging in?{\" \"}\n                    <u\n                      onClick={() => navigate(\"/user/forgot-password\")}\n                      className=\"cursor-pointer text-black hover:text-[#a07bf8] transition-all\"\n                    >\n                      Click here\n                    </u>\n                  </div>\n                  {/* <div className=\" flex justify-center cursor-pointer my-2 sm:mb-3 sm:mt-0 py-2 sm:py-0 sm:shadow-none shadow-md text-sm text-[#552288] hover:underline hover:cursor-pointer rouded-md font-medium gap-1 items-center drop-shadow-sm transition-all  rounded-sm \">\n                    <span className=\"drop-shadow-md \">Login with</span>\n                    <FcGoogle size={24} />\n                  </div> */}\n                </div>\n                <div className=\"my-5 flex  items-centers justify-center\">\n                  <input\n                    type=\"button\"\n                    value=\"Log In\"\n                    onClick={handleSubmit}\n                    className=\"w-screen py-2 cursor-pointer bg-[#a07bf8] text-center text-white rounded-lg \"\n                  />\n                </div>\n                <p className=\"mb-4 text-xs text-center text-[#a07bf8] font-medium\">\n                  <span className=\" sm:inline  \">New to Axonaio? </span>\n                  <span\n                    onClick={() => navigate(\"/merchants/signup\")}\n                    className=\" cursor-pointer underline transition-all hover:opacity-70\"\n                  >\n                    Sign up\n                  </span>\n                </p>\n\n                {/* <div className=\" flex justify-center cursor-pointer mb-2 text-white rounded-lg \">\n                <FcGoogle size={24} />\n              </div> */}\n                <div className=\"text-xs sm:text-md sm:text-center sm:opacity-80 text-left font-medium opacity-50 \">\n                  Protected by reCAPTCHA. <br /> Google{\" \"}\n                  <a href=\"#\">Privacy Policy </a>&\n                  <a href=\"#\"> Terms of Service</a>\n                </div>\n              </form>\n            </div>\n            <div className=\" min-h-[100vh] hidden flex-col bg-[#a07bf8] min-w-[50%] p-16 sm:flex items-center justify-center\">\n              <img src={loginImg} className=\"w-10/12 \" />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default LoginPage;\n","const BusinessFormIsEmpty = (formData) => {\n  const error = {};\n  const fields = [\n    \"companyName\",\n    \"businessType\",\n    \"businessCategory\",\n    \"description\",\n    \"website\",\n    \"city\",\n    \"state\",\n    \"address\",\n    \"pincode\",\n  ];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n  });\n\n  if (Object.keys(error).length === 0) return null;\n  return error;\n};\n\nconst BankDetailsFormISEmpty = (formData) => {\n  const error = {};\n  const fields = [\n    \"accountHolderName\",\n    \"accountType\",\n    \"accountNumber\",\n    \"confirmAn\",\n    \"ifscCode\",\n    \"branchName\",\n  ];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n  });\n  if (Object.keys(error).length === 0) return null;\n  return error;\n};\n\nconst DocumentUploadIsEmpty = (formData) => {\n  const error = {};\n  const fields = [\n    \"panNumber\",\n    \"aadharVoterIdPassportDLNumber\",\n    \"gstNumber\",\n    \"cancelledCheque\",\n    \"companyPan\",\n    \"registrationCertificate\",\n  ];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n  });\n  if (Object.keys(error).length === 0) return null;\n  return error;\n};\n\nconst IsEmptySignup = (formData) => {\n  const error = {};\n  const fields = [\"name\", \"phonenumber\", \"email\", \"password\"];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n  });\n  if (Object.keys(error).length === 0) return null;\n  return error;\n};\n\nconst IsEmptyLogin = (formData) => {\n  console.log(formData);\n  const error = {};\n  const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n  const passwordRegex =\n    /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/;\n  const fields = [\"email\", \"password\"];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n    switch (field) {\n      case \"email\":\n        error[field] = !emailRegex.test(formData[field]) ? \"Invalid Email\" : \"\";\n        break;\n      case \"password\":\n        error[field] = !passwordRegex.test(formData[field])\n          ? \"Password must contain at least 8 characters, including at least 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\"\n          : \"\";\n        break;\n      default:\n        break;\n    }\n  });\n  console.log(error);\n  const { name = \"\", email = \"\", password = \"\", phonenumber = \"\" } = error;\n  if (name === \"\" && email === \"\" && password === \"\" && phonenumber === \"\")\n    return null;\n  return error;\n};\n\nconst signupValidation = (formData) => {\n  console.log(formData);\n  const phoneRegex = /^\\d{10}$/;\n  const nameRegex = /^[a-z A-Z]+$/;\n  const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const passwordRegex =\n    /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/;\n  let error = {};\n  const fields = [\"name\", \"phonenumber\", \"email\", \"password\"];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[field] = `${field} not present`;\n    }\n    switch (field) {\n      case \"name\":\n        error[field] = !nameRegex.test(formData[field]) ? \"Invalid Name\" : \"\";\n        break;\n      case \"phonenumber\":\n        error[field] = !phoneRegex.test(formData[field])\n          ? \"Invalid Phone Number\"\n          : \"\";\n        break;\n      case \"email\":\n        error[field] = !emailRegex.test(formData[field]) ? \"Invalid Email\" : \"\";\n        break;\n      case \"password\":\n        error[field] = !passwordRegex.test(formData[field])\n          ? \"Password must contain at least 8 characters, including at least 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\"\n          : \"\";\n        break;\n      default:\n        break;\n    }\n  });\n  console.log(error);\n\n  const { name = \"\", email = \"\", password = \"\", phonenumber = \"\" } = error;\n  if (name === \"\" && email === \"\" && password === \"\" && phonenumber === \"\")\n    return null;\n  return error;\n};\n\nconst validationForm = (formData) => {\n  console.log(formData);\n  const phoneRegex = /^\\d{10}$/;\n  const nameRegex = /^[a-z A-Z]+$/;\n  const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  let error = {};\n  const fields = [\"phoneNo\"];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[field] = `${field} not present`;\n    }\n    switch (field) {\n      // case 'name':\n      //   error[field] = !nameRegex.test(formData[field]) ? \"Invalid Name\" : \"\"\n      //   break;\n      case \"phoneNo\":\n        error[field] = !phoneRegex.test(formData[field])\n          ? \"Invalid Phone Number\"\n          : \"\";\n        break;\n      // case 'email':\n      //   error[field] = !emailRegex.test(formData[field]) ? \"Invalid Email\" : \"\";\n      //   break\n      default:\n        break;\n    }\n  });\n  // const { name = \"\", email = \"\", password = \"\", phoneNo = \"\" } = error;\n  const { phoneNo = \"\" } = error;\n  // if (name === \"\" && email === \"\" && password === \"\" && phoneNo === \"\") return null\n  if (phoneNo === \"\") return null;\n  return error;\n};\nexport {\n  signupValidation,\n  BusinessFormIsEmpty,\n  DocumentUploadIsEmpty,\n  BankDetailsFormISEmpty,\n  IsEmptySignup,\n  IsEmptyLogin,\n  validationForm,\n};\n"],"names":["login","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","user","res","wrap","_context","prev","next","loginStart","publicRequest","post","sent","data","isBasic","console","log","localStorage","setItem","token","loginSuccess","getItem","abrupt","t0","loginFailure","response","stop","_x","_x2","apply","arguments","merchantLogo","networkError","formObj","password","email","_useState","useState","_useState2","_slicedToArray","formValues","setFormValues","_useState3","_useState4","error","setError","_useState5","_useState6","Error","setErrors","navigate","useNavigate","useDispatch","_useState7","_useState8","showSnackbar","enqueueSnackbar","useSnackbar","handleSubmit","_ref2","e","temp","preventDefault","IsEmptyLogin","result","message","handleChange","_e$target","target","name","value","length","_objectSpread","_defineProperty","_jsx","_Fragment","children","_jsxs","className","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","style","position","bottom","left","right","backgroundColor","padding","borderRadius","zIndex","action","method","src","ErrorPara","PiWarning","type","onChange","placeholder","required","onClick","href","loginImg","formData","emailRegex","passwordRegex","forEach","field","concat","test","_error$name","_error$email","_error$password","_error$phonenumber","phonenumber","signupValidation","phoneRegex","nameRegex","_error$name2","_error$email2","_error$password2","_error$phonenumber2","validationForm","_error$phoneNo","phoneNo"],"sourceRoot":""}