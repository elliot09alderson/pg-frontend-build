{"version":3,"file":"static/js/474.cb1454bd.chunk.js","mappings":"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","sources":["Pages/Dashboard Components/payout/Benificiary.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, FileInput, Label, Modal, TextInput } from \"flowbite-react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createBeneficiary,\r\n  get_beneficiary,\r\n  delete_beneficiary,\r\n  messageClear,\r\n} from \"../../../redux/payout/beneficiaryReducer\";\r\nimport Swal from \"sweetalert2\";\r\nimport TanStackTable from \"../TansStackTable\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nconst Benificiary = () => {\r\n  const [active, setActive] = useState(\"instant\");\r\n\r\n  const [openModal, setOpenModal] = useState();\r\n  const props = { openModal, setOpenModal };\r\n\r\n  function handleDelete(id) {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn text-white ml-4 px-4 py-2 rounded-lg bg-green-500\",\r\n        cancelButton: \"btn text-white mr-4 px-4 py-2 bg-red-600 rounded-lg\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: \"Are you sure ?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes, delete it!\",\r\n        cancelButtonText: \"No, cancel!\",\r\n        reverseButtons: true,\r\n      })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          dispatch(delete_beneficiary({ id })).then(() => {\r\n            dispatch(get_beneficiary());\r\n          });\r\n\r\n          swalWithBootstrapButtons.fire({\r\n            title: \"Deleted!\",\r\n            text: \"Your Beneficiary has been deleted.\",\r\n            icon: \"success\",\r\n          });\r\n        } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n          swalWithBootstrapButtons.fire({\r\n            title: \"Cancelled\",\r\n            text: \"Your beneficiary acc is safe :)\",\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  const headers = [\r\n    { header: \"Beneficiary Id\", accessorKey: \"ben_id\" },\r\n    { header: \"Name\", accessorKey: \"ben_name\" },\r\n    { header: \"IFSC\", accessorKey: \"ben_ifsc_code\" },\r\n    { header: \"Mobile\", accessorKey: \"ben_mobile\" },\r\n    { header: \"Email\", accessorKey: \"ben_email\" },\r\n    // { header: \"Upi Id\", accessorKey: \"visits\" },\r\n    { header: \"Account Number\", accessorKey: \"ben_bank_acc\" },\r\n    { header: \"Address\", accessorKey: \"ben_address\" },\r\n    { header: \"PinCode\", accessorKey: \"ben_pincode\" },\r\n    {\r\n      header: \"Action\",\r\n      accessorKey: \"ben_id\",\r\n      cell: (row) => (\r\n        <div className=\"flex justify-between \">\r\n          <MdDelete\r\n            className=\"cursor-pointer\"\r\n            size={20}\r\n            onClick={(e) => {\r\n              handleDelete(row.row.original.ben_id);\r\n            }}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    ben_name: Yup.string().required(\"Name is required\"),\r\n    ben_mobile: Yup.string()\r\n      .required(\"Mobile number is required\")\r\n      .matches(/^\\d{10}$/, \"Mobile number must be 10 digits\"),\r\n    ben_email: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Email is required\"),\r\n    ben_address: Yup.string().required(\"Address is required\"),\r\n    ben_state: Yup.string().required(\"State is required\"),\r\n    ben_pincode: Yup.string()\r\n      .required(\"Pincode is required\")\r\n      .matches(/^\\d{6}$/, \"Pincode must be 6 digits\"),\r\n    ben_bank_acc: Yup.string().required(\"Bank account number is required\"),\r\n    ben_ifsc_code: Yup.string()\r\n      .required(\"IFSC code is required\")\r\n      .matches(/^[A-Za-z]{4}\\d{7}$/, \"Invalid IFSC code\"),\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { beneficiaryData, successMessage, loader, errorMessage } = useSelector(\r\n    (state) => state.beneficiary\r\n  );\r\n\r\n  const initialValues = {\r\n    ben_name: \"\",\r\n    ben_mobile: \"\",\r\n    ben_email: \"\",\r\n    ben_address: \"\",\r\n    ben_state: \"\",\r\n    ben_pincode: \"\",\r\n    ben_bank_acc: \"\",\r\n    ben_ifsc_code: \"\",\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      enqueueSnackbar(errorMessage);\r\n    }\r\n    if (successMessage) {\r\n      enqueueSnackbar(successMessage);\r\n    }\r\n    dispatch(messageClear());\r\n  }, [errorMessage, successMessage]);\r\n\r\n  useEffect(() => {\r\n    dispatch(get_beneficiary());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\" flex flex-col \">\r\n      <div className=\" mt-4 items-center flex sm:justify-start sm:px-6 justify-center\">\r\n        <Button\r\n          gradientDuoTone=\"purpleToBlue\"\r\n          onClick={() => props.setOpenModal(\"dismissible\")}\r\n          className=\"bg-blue-400 w-64  first-bg fourth-text\"\r\n        >\r\n          Add Beneficiary\r\n        </Button>\r\n      </div>\r\n\r\n      <Modal\r\n        dismissible\r\n        show={props.openModal === \"dismissible\"}\r\n        size={\"md\"}\r\n        onClose={() => props.setOpenModal(undefined)}\r\n        className=\"rounded-b-xl cross focus:outline-none\"\r\n      >\r\n        <Modal.Header className=\" h-20 text-black\">\r\n          {\" \"}\r\n          <p className=\"sm:text-xl text-tairo-blue  text-sm\">\r\n            {\" \"}\r\n            Add Beneficiary\r\n          </p>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"rounded-b-xl\">\r\n          <div className=\"flex flex-col bg-white \">\r\n            <nav className=\"flex gap-4  w-full items-center justify-center border-b-2 shadow-sm\">\r\n              <li\r\n                className={`px-5  ${\r\n                  active === \"instant\"\r\n                    ? \"   tairo-bg tairo-text-blue \"\r\n                    : \" tairo-text \"\r\n                } py-2 cursor-pointer rounded-t  list-none transition-all  text-sm `}\r\n                onClick={() => setActive(\"instant\")}\r\n              >\r\n                Enter Beneficiary Details\r\n              </li>\r\n              <li\r\n                className={`px-4 ${\r\n                  active === \"Bulk\"\r\n                    ? \" tairo-bg tairo-text-blue \"\r\n                    : \" tairo-text \"\r\n                }  py-2 cursor-pointer text-sm list-none rounded-t `}\r\n                onClick={() => setActive(\"Bulk\")}\r\n              >\r\n                Add Bulk Beneficiary\r\n              </li>\r\n            </nav>\r\n            {active === \"instant\" && (\r\n              <div className=\"flex flex-col gap-4\">\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={(values, { resetForm }) => {\r\n                    dispatch(createBeneficiary({ datax: values })).then(\r\n                      (response) => {\r\n                        if (response.payload.status) {\r\n                          resetForm();\r\n                        }\r\n                      }\r\n                    );\r\n                  }}\r\n                >\r\n                  {({ isSubmitting, resetForm }) => (\r\n                    <Form className=\"flex flex-col gap-5 my-4\">\r\n                      {[\r\n                        \"ben_name\",\r\n                        \"ben_mobile\",\r\n                        \"ben_email\",\r\n                        \"ben_address\",\r\n                        \"ben_state\",\r\n                        \"ben_pincode\",\r\n                        \"ben_bank_acc\",\r\n                        \"ben_ifsc_code\",\r\n                      ].map((field, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"flex  flex-col justify-between   \"\r\n                        >\r\n                          <Label htmlFor={field} className=\"text-sm   \">\r\n                            {field\r\n                              .replace(\"ben_\", \"\")\r\n                              .replace(\"_\", \" \")\r\n                              .replace(/\\b\\w/g, (char) => char.toUpperCase())}\r\n                          </Label>\r\n                          <div className=\"flex flex-col gap-4\">\r\n                            <Field type=\"text\" name={field}>\r\n                              {({ field }) => (\r\n                                <TextInput\r\n                                  {...field}\r\n                                  type=\"text\"\r\n                                  // placeholder=\"xxxxxxxx\"\r\n                                  required\r\n                                  className=\"h-8 \"\r\n                                />\r\n                              )}\r\n                            </Field>\r\n                            <ErrorMessage\r\n                              name={field}\r\n                              className=\"text-xs text-red-500\"\r\n                              component=\"div\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n\r\n                      <div className=\"flex items-center justify-center my-4\">\r\n                        <Button\r\n                          className=\" mt-2 w-[200px]   rounded-md \"\r\n                          gradientDuoTone=\"purpleToBlue\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Add\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            )}\r\n            {active === \"Bulk\" && (\r\n              <div className=\"p-3\">\r\n                <div className=\"flex my-2 items-center w-full justify-center  flex-col gap-4\">\r\n                  <div className=\"flex items-center w-full flex-col gap-3 \">\r\n                    <p className=\"  lg:text-xl tairo-text text-lg drop-shadow-sm  font-normal\">\r\n                      Beneficiaries File Upload\r\n                    </p>\r\n\r\n                    <div className=\"flex w-full items-center justify-center\">\r\n                      <Label\r\n                        htmlFor=\"dropzone-file\"\r\n                        className=\"flex h-64 w-full cursor-pointer flex-col items-center justify-center rounded-lg border-2 border-dashed border-gray-300 bg-gray-50 hover:bg-gray-100 dark:border-gray-600 dark:bg-gray-700 dark:hover:border-gray-500 dark:hover:bg-gray-600\"\r\n                      >\r\n                        <div className=\"flex flex-col items-center justify-center pb-6 pt-5\">\r\n                          <svg\r\n                            className=\"mb-4 h-8 w-8 text-gray-500 dark:text-gray-400\"\r\n                            aria-hidden=\"true\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 20 16\"\r\n                          >\r\n                            <path\r\n                              stroke=\"currentColor\"\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                              strokeWidth=\"2\"\r\n                              d=\"M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2\"\r\n                            />\r\n                          </svg>\r\n                          <p className=\"mb-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                            <span className=\"font-semibold\">\r\n                              Click to upload\r\n                            </span>{\" \"}\r\n                            or drag and drop\r\n                          </p>\r\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                            SVG, PNG, JPG or GIF (MAX. 800x400px)\r\n                          </p>\r\n                        </div>\r\n                        <FileInput id=\"dropzone-file\" className=\"hidden\" />\r\n                      </Label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"btn-div flex gap-8 px-2 my-3\">\r\n                    {\" \"}\r\n                    <Button\r\n                      gradientDuoTone=\"purpleToBlue\"\r\n                      className=\"bg-green-500 sm:px-4  px-4 text-white\"\r\n                    >\r\n                      Upload\r\n                    </Button>\r\n                    <Button\r\n                      gradientDuoTone=\"pinkToOrange\"\r\n                      className=\"bg-red-400  sm:px-4 px-4  fourth-text\"\r\n                    >\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {loader ? (\r\n        <div className=\"flex items-center justify-center tetx-xl\">\r\n          Loading ........\r\n        </div>\r\n      ) : (\r\n        <TanStackTable\r\n          headers={headers}\r\n          successMessage={successMessage}\r\n          data={beneficiaryData}\r\n          clearMessage={messageClear}\r\n          className=\"second-bg rounded-t-md\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Benificiary;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","active","setActive","_useState3","_useState4","props","openModal","setOpenModal","headers","header","accessorKey","cell","row","_jsx","className","children","MdDelete","size","onClick","e","id","swalWithBootstrapButtons","Swal","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","dispatch","delete_beneficiary","get_beneficiary","dismiss","cancel","handleDelete","original","ben_id","validationSchema","Yup","shape","ben_name","required","ben_mobile","matches","ben_email","email","ben_address","ben_state","ben_pincode","ben_bank_acc","ben_ifsc_code","enqueueSnackbar","useSnackbar","_useSelector","useSelector","state","beneficiary","beneficiaryData","successMessage","loader","errorMessage","useDispatch","useEffect","messageClear","_jsxs","Button","gradientDuoTone","Modal","dismissible","show","onClose","undefined","Header","Body","concat","Formik","initialValues","onSubmit","values","_ref","resetForm","createBeneficiary","datax","response","payload","status","_ref2","isSubmitting","Form","map","field","index","Label","htmlFor","replace","char","toUpperCase","Field","type","name","_ref3","TextInput","_objectSpread","ErrorMessage","component","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","FileInput","TanStackTable","data","clearMessage"],"sourceRoot":""}