{"version":3,"file":"static/js/666.a6496a65.chunk.js","mappings":"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","sources":["Pages/SignupPage.js","utils/validation.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { dash, fintech, payment } from \"../../src/assests/img/index.js\";\n\nimport \"./styles/owl.carousel.min.css\";\n// import \"./styles/bootstrap.min.css\";\nimport \"./styles/style.css\";\nimport axios from \"axios\";\nimport { FcGoogle } from \"react-icons/fc\";\n\nimport { useSnackbar } from \"notistack\";\nimport { ErrorPara } from \"../components/OnboardingFormComponent/BusinessComponent\";\nimport { IsEmptySignup, signupValidation } from \"../utils/validation\";\nimport { frontImage } from \"../assests\";\n\nfunction Newfiles3({ merchantLogo }) {\n  const navigate = useNavigate();\n  let formObj = { name: \"\", password: \"\", email: \"\", phonenumber: \"\" };\n  const [formValues, setFormValues] = useState(formObj);\n  const [error, setError] = useState({});\n  const { enqueueSnackbar } = useSnackbar();\n\n  // const hasErrors = () => {\n  //   let hasError = false;\n  //   let errors = {};\n  //   formObj.forEach(item => {\n  //     const errorField = signupValidation({ [item]: item, value: formObj[item] })\n  //     errors = { ...errors, errorField };\n  //     if (errorField[item]) hasError = true;\n  //   })\n  //   setError({ ...errors, alert: true });\n  //   return hasError;\n  // }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let temp = signupValidation(formValues);\n    console.log(\"hiiiii\", temp);\n    setError(temp);\n    if (temp === null) {\n      console.log(\"hello\");\n      console.log(formValues);\n      axios\n        .post(\n          `${process.env.REACT_APP_SERVER_URL}/api/v1/user/signup`,\n          formValues\n        )\n        .then((res) => {\n          console.log(\"res -> \", res);\n          // if (!res.ok) throw new Error(\"something wrong happen while fetching\");\n          if (res.data.result) {\n            navigate(\"/\");\n            enqueueSnackbar(\"Please verify the gmail\");\n          } else {\n            // setError(res.data.message);\n            enqueueSnackbar(res.data.message);\n          }\n        })\n        .catch((err) => {\n          console.log(\"errror\", err.message);\n          enqueueSnackbar(err.message);\n        });\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (value.length < 1) {\n      setError(null);\n    }\n    setFormValues({ ...formValues, [name]: value });\n    // let err = signupValidation({ name, value })\n    // setError(pre => ({ ...error, ...err }))\n  };\n\n  return (\n    <>\n      <div className=\"flex justify-between\">\n        <div className=\"flex justify-center items-center min-w-[50%]\">\n          <form\n            action=\"#\"\n            method=\"post\"\n            className=\"lg:max-w-[400px] sm:max-w-[300px] max-w-[80%]\"\n          >\n            <div className=\"md:mt-2 mt-4\">\n              {/* <h3 className=\"text-center\">Sign In</h3> */}\n              <img src={merchantLogo} className=\"w-28 mx-auto\" />\n              <p className=\" text-center font-medium text-slate-800 my-4 mb-6 mt-2\">\n                Create your account\n              </p>\n            </div>\n            <div className=\"form-group first my-4 flex flex-col gap-5\">\n              <div>\n                <input\n                  type=\"text\"\n                  className=\" w-full px-2 py-2 ring-1 max-w-[400px] rounded-md focus:outline-none \"\n                  name=\"name\"\n                  value={formValues.name}\n                  onChange={handleChange}\n                  placeholder=\"First-Name\"\n                  required\n                />\n                {error?.name && (\n                  <ErrorPara className=\"pl-1 text-xs font-normal\">\n                    {error?.name ? error.name : \"\"}\n                  </ErrorPara>\n                )}\n              </div>\n\n              <div>\n                <input\n                  type=\"text\"\n                  name=\"phonenumber\"\n                  className=\"w-full px-2 py-2 ring-1 max-w-[400px] rounded-md focus:outline-none \"\n                  value={formValues.phonenumber}\n                  onChange={handleChange}\n                  placeholder=\"Phonenumber\"\n                  maxLength={10}\n                />\n                {error?.phonenumber && (\n                  <ErrorPara className=\"pl-1 text-xs font-normal\">\n                    {error.phonenumber}\n                  </ErrorPara>\n                )}\n              </div>\n\n              <div>\n                <input\n                  type=\"email\"\n                  className=\"w-full px-2 py-2 ring-1 max-w-[400px] rounded-md focus:outline-none \"\n                  name=\"email\"\n                  value={formValues.email}\n                  onChange={handleChange}\n                  placeholder=\"E-mail\"\n                  required\n                />\n                {error?.email && (\n                  <ErrorPara className=\"pl-1 text-xs font-normal\">\n                    {error.email}\n                  </ErrorPara>\n                )}\n              </div>\n\n              <div>\n                <input\n                  type=\"password\"\n                  className=\"w-full px-2 py-2 ring-1 max-w-[400px] rounded-md focus:outline-none \"\n                  name=\"password\"\n                  value={formValues.password}\n                  onChange={handleChange}\n                  placeholder=\"Password\"\n                  required\n                />\n\n                {error?.password && (\n                  <ErrorPara className=\"pl-1 text-xs font-normal\">\n                    {error.password}\n                  </ErrorPara>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between  flex-row items-center \">\n              <p className=\"text-xs self-center text-center font-medium ml-2 \">\n                By signing up, you accept the Axonaio\n                <u\n                  className=\"cursor-pointer text-[#552288] hover:opacity-70 transition-all ml-1 e\"\n                  onClick={() => navigate(\"/merchants/application\")}\n                >\n                  Terms & Conditions\n                </u>\n              </p>\n            </div>\n            <div className=\" flex justify-center cursor-pointer my-2 sm:mb-3 sm:mt-0  px-4  items-center sm:py-0  shadow-md text-sm text-[#552288]  underline sm:rounded-md  hover:opacity-70  hover:cursor-pointer rouded-md font-medium gap-1   drop-shadow-sm transition-all w-full  rounded-sm  \">\n              <span className=\"drop-shadow-md   \">Sign up with</span>\n              <FcGoogle size={24} />\n            </div>\n            <div className=\"my-4 flex  items-centers justify-center\">\n              <input\n                type=\"button\"\n                value=\"Sign up \"\n                onClick={handleSubmit}\n                className=\"w-screen py-2 bg-[#552288] text-center text-white rounded-lg \"\n              />\n            </div>\n            <p className=\"mb-4 text-xs text-center text-[#552288] font-medium\">\n              <span className=\" sm:inline  \">Already a member </span>\n              <span\n                onClick={() => navigate(\"/\")}\n                className=\" cursor-pointer underline transition-all hover:opacity-70\"\n              >\n                Log in\n              </span>\n            </p>\n\n            {/* {error && <ErrorPara>{error}</ErrorPara>} */}\n          </form>\n        </div>\n        <div className=\" min-h-[100vh] hidden flex-col bg-[#440a64] min-w-[50%] p-16 sm:flex items-center justify-center \">\n          <img\n            src={fintech}\n            alt=\"signinLogo\"\n            className=\"lg:p-8  md:ml-2 m-0 sm:p-4 w-10/12\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Newfiles3;\n","const BusinessFormIsEmpty = (formData) => {\n  const error = {};\n  const fields = [\n    \"companyName\",\n    \"businessType\",\n    \"businessCategory\",\n    \"description\",\n    \"website\",\n    \"city\",\n    \"state\",\n    \"address\",\n    \"pincode\",\n  ];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n  });\n\n  if (Object.keys(error).length === 0) return null;\n  return error;\n};\n\nconst BankDetailsFormISEmpty = (formData) => {\n  const error = {};\n  const fields = [\n    \"accountHolderName\",\n    \"accountType\",\n    \"accountNumber\",\n    \"confirmAn\",\n    \"ifscCode\",\n    \"branchName\",\n  ];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n  });\n  if (Object.keys(error).length === 0) return null;\n  return error;\n};\n\nconst DocumentUploadIsEmpty = (formData) => {\n  const error = {};\n  const fields = [\n    \"panNumber\",\n    \"aadharVoterIdPassportDLNumber\",\n    \"gstNumber\",\n    \"cancelledCheque\",\n    \"companyPan\",\n    \"registrationCertificate\",\n  ];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n  });\n  if (Object.keys(error).length === 0) return null;\n  return error;\n};\n\nconst IsEmptySignup = (formData) => {\n  const error = {};\n  const fields = [\"name\", \"phonenumber\", \"email\", \"password\"];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n  });\n  if (Object.keys(error).length === 0) return null;\n  return error;\n};\n\nconst IsEmptyLogin = (formData) => {\n  console.log(formData);\n  const error = {};\n  const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n  const passwordRegex =\n    /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/;\n  const fields = [\"email\", \"password\"];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n    switch (field) {\n      case \"email\":\n        error[field] = !emailRegex.test(formData[field]) ? \"Invalid Email\" : \"\";\n        break;\n      case \"password\":\n        error[field] = !passwordRegex.test(formData[field])\n          ? \"Password must contain at least 8 characters, including at least 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\"\n          : \"\";\n        break;\n      default:\n        break;\n    }\n  });\n  console.log(error);\n  const { name = \"\", email = \"\", password = \"\", phonenumber = \"\" } = error;\n  if (name === \"\" && email === \"\" && password === \"\" && phonenumber === \"\")\n    return null;\n  return error;\n};\n\nconst signupValidation = (formData) => {\n  console.log(formData);\n  const phoneRegex = /^\\d{10}$/;\n  const nameRegex = /^[a-z A-Z]+$/;\n  const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const passwordRegex =\n    /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/;\n  let error = {};\n  const fields = [\"name\", \"phonenumber\", \"email\", \"password\"];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[field] = `${field} not present`;\n    }\n    switch (field) {\n      case \"name\":\n        error[field] = !nameRegex.test(formData[field]) ? \"Invalid Name\" : \"\";\n        break;\n      case \"phonenumber\":\n        error[field] = !phoneRegex.test(formData[field])\n          ? \"Invalid Phone Number\"\n          : \"\";\n        break;\n      case \"email\":\n        error[field] = !emailRegex.test(formData[field]) ? \"Invalid Email\" : \"\";\n        break;\n      case \"password\":\n        error[field] = !passwordRegex.test(formData[field])\n          ? \"Password must contain at least 8 characters, including at least 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\"\n          : \"\";\n        break;\n      default:\n        break;\n    }\n  });\n  console.log(error);\n\n  const { name = \"\", email = \"\", password = \"\", phonenumber = \"\" } = error;\n  if (name === \"\" && email === \"\" && password === \"\" && phonenumber === \"\")\n    return null;\n  return error;\n};\n\nconst validationForm = (formData) => {\n  console.log(formData);\n  const phoneRegex = /^\\d{10}$/;\n  const nameRegex = /^[a-z A-Z]+$/;\n  const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  let error = {};\n  const fields = [\"phoneNo\"];\n  fields.forEach((field) => {\n    if (!formData[`${field}`]) {\n      error[field] = `${field} not present`;\n    }\n    switch (field) {\n      // case 'name':\n      //   error[field] = !nameRegex.test(formData[field]) ? \"Invalid Name\" : \"\"\n      //   break;\n      case \"phoneNo\":\n        error[field] = !phoneRegex.test(formData[field])\n          ? \"Invalid Phone Number\"\n          : \"\";\n        break;\n      // case 'email':\n      //   error[field] = !emailRegex.test(formData[field]) ? \"Invalid Email\" : \"\";\n      //   break\n      default:\n        break;\n    }\n  });\n  // const { name = \"\", email = \"\", password = \"\", phoneNo = \"\" } = error;\n  const { phoneNo = \"\" } = error;\n  // if (name === \"\" && email === \"\" && password === \"\" && phoneNo === \"\") return null\n  if (phoneNo === \"\") return null;\n  return error;\n};\nexport {\n  signupValidation,\n  BusinessFormIsEmpty,\n  DocumentUploadIsEmpty,\n  BankDetailsFormISEmpty,\n  IsEmptySignup,\n  IsEmptyLogin,\n  validationForm,\n};\n"],"names":["_ref","merchantLogo","navigate","useNavigate","_useState","useState","name","password","email","phonenumber","_useState2","_slicedToArray","formValues","setFormValues","_useState3","_useState4","error","setError","enqueueSnackbar","useSnackbar","handleChange","e","_e$target","target","value","length","_objectSpread","_defineProperty","_jsx","_Fragment","children","_jsxs","className","action","method","src","type","onChange","placeholder","required","ErrorPara","maxLength","onClick","FcGoogle","size","preventDefault","temp","signupValidation","console","log","axios","post","concat","process","then","res","data","result","message","catch","err","fintech","alt","IsEmptyLogin","formData","emailRegex","passwordRegex","forEach","field","test","_error$name","_error$email","_error$password","_error$phonenumber","phoneRegex","nameRegex","_error$name2","_error$email2","_error$password2","_error$phonenumber2","validationForm","_error$phoneNo","phoneNo"],"sourceRoot":""}